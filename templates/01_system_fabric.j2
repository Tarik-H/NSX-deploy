{# - name: Assert if dictionary
    assert:
      that: ( mydict is defined ) and ( mydict | type_debug == "dict" )

  - name: Assert if list
    assert:
      that: ( mylist is defined ) and ( mylist | type_debug == "list" ) #}


# {{ ansible_managed }}
{% set fabric = spreadsheet_system_fabric %}
{# {% macro uplnkvds(arg1,arg2='') %}
{% for k,v in i.items() if "Uplink " in k %}{{arg2}} "i.UPLINK{{arg1}}"{%endfor%}
{% endmacro           %}
{% macro uplnknvds(arg1,arg2='') %}
{% if "vmnic" in "i.UPLINK{{arg1}}" %}{{arg2}} "i.UPLINK{{arg1}}"{%endif%}
{% endmacro           %} #}
---

system_fabric:
{%if vcenters_list %}
  vcenters_list:
{% for vc in vcenters_list.split(',')|ipaddr %}
    - {{vc|ipaddr}}
{% endfor %}
{%endif%}
{%if tep_pool_gw %}
  tep_pool_gws:
{% for tep in tep_pool_gw.split(',')|ipaddr %}
    - {{tep|ipaddr('host/prefix')}}
{% endfor %}
{%endif%}

  compute_transp_nodes:
{% for i in fabric if ((i.Node_type == 'vsphere_cluster' or i.Node_type == 'single_esxi_host') and i.vcenter_ip and i.Uplink_profile) %}
    - { vcenter: "vCenter_{{i.vcenter_ip}}"{%if i.Node_name and (i.Node_type|lower == 'vsphere_cluster')%}, cluster_name: "{{i.Node_name}}", transport_node_profile_name: "TranspNodeProfl-cluster-{{i.Node_name}}"{%elif i.Node_ip and i.Node_type == 'single_esxi_host'%}, node_ip: "{{i.Node_ip|ipaddr}}" {%endif%},  switch_type: {%if i.NVDS_type|lower == 'vds 7'%}'VDS'{%else%}'NVDS'{%endif%}{%if i.NVDS_type|lower == 'vds 7'%}, vds_name: "{{i.VDS_name}}"{%endif%}, TZ: ['TZ_Overlay','TZ_Vlan'], uplink_profile: "{{i.Uplink_profile}}",  static_ip_assign: "NSX_TEP_POOL"{%if i.NVDS_type|lower == 'vds 7'%}, nics: [{% for k, v in i.items() if v != none and 'UPLINK' in k %}{%if not loop.last%}{uplink_name: "{{k}}", vds_uplink_name: "{{v}}"},{%else%}{uplink_name: "{{k}}", vds_uplink_name: "{{v}}"}{%endif%}{%endfor%}]{%elif i.NVDS_type|lower == 'n-vds'%}, nics: [{% for k, v in i.items() if v != none and 'UPLINK' in k %}{%if not loop.last%}{uplink_name: "{{k}}", device_name: "{{v}}"},{%else%}{uplink_name: "{{k}}", device_name: "{{v}}"}{%endif%}{%endfor%}]{%endif%}   }
{% endfor %}

  edge_transp_nodes:
{% for i in fabric if ((i.Node_type == 'edge_vm' ) and i.Node_name and i.vcenter_ip and i.Uplink_profile and i.Edge_vm_mgmt_ip and i.Edge_vm_datastore and i.Edge_vm_mgmt_PG) %}
    - { vcenter: "vCenter_{{i.vcenter_ip}}", edge_name: "{{i.Node_name}}"{%if i.Edge_vm_FQDN%}, edge_vm_fqdn: "{{i.Edge_vm_FQDN}}"{%endif%}{%if i.Edge_vm_size%}, edge_vm_size: "{{i.Edge_vm_size}}"{%endif%}{%if i.Edge_vm_vsphere_cluster%}, edge_vsphere_cluster: "{{i.Edge_vm_vsphere_cluster}}"{%endif%}{%if i.Edge_vm_datastore%}, edge_vm_datastore: "{{i.Edge_vm_datastore}}"{%endif%}{%if i.Edge_vm_mgmt_ip|ipaddr('address/prefix')%}, edge_vm_mgmt_ip: "{{i.Edge_vm_mgmt_ip|ipaddr}}"{%endif%}{%if i.Edge_vm_ip_gateway|ipaddr%}, edge_vm_ip_gateway: "{{i.Edge_vm_ip_gateway|ipaddr('address')}}"{%endif%}{%if i.Edge_vm_mgmt_PG%}, edge_vm_mgmt_pg: "{{i.Edge_vm_mgmt_PG}}"{%endif%}, TZ: ['TZ_Overlay','TZ_Vlan'], uplink_profile: "{{i.Uplink_profile}}",  static_ip_assign: "NSX_TEP_POOL"{%if i.Node_type|lower == 'edge_vm' and i.NVDS_type|lower == 'n-vds'%}, nics: [{% for k, v in i.items() if v != none and 'UPLINK' in k %}{%if not loop.last%}{uplink_name: "EDG-{{k}}", device_name: "{{v}}"},{%else%}{uplink_name: "EDG-{{k}}", device_name: "{{v}}"}{%endif%}{%endfor%}]{%endif%}{%if i.Edge_vm_trunk_PG%}, edge_vm_networks: [{% for k, v in i.items() if v != none and 'UPLINK' in k %}{%if not loop.last%}"{{i.Edge_vm_trunk_PG}}",{%else%}"{{i.Edge_vm_trunk_PG}}"{%endif%}{%endfor%}]{%endif%}     }
{% endfor %}

{% set members_temp =[] %} 
  edge_clusters:
{%- for row in fabric if ((row.Within_Edge_cluster|lower=='yes') and (row.Edge_cluster_name not in members_temp)) %}
{{members_temp.append(row.Edge_cluster_name)}}
    - edge_cluster_name: "{{row.Edge_cluster_name}}"
      members:
{% for i in fabric if (i.Edge_cluster_name==row.Edge_cluster_name) %}
        - transport_node_name: {{i.Node_name}}
{% endfor -%}
{% endfor %}











