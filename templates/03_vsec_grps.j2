{% set vsegments = spreadsheet_vNetworking_segments %}
{% set vgateways = spreadsheet_vNetworking_gateways %}
{% set vtags = spreadsheet_vTags %}
{% set vsecgroups = spreadsheet_vSec_grps %}

vm_tags:
{% for i in vtags if (i.vm_name) %}
  - { vm_name: "{{i.vm_name}}", tags: [ {%if i.Tag_Environment%} {tag: "ENVIRONMENT", scope: "{{i.Tag_Environment}}"}{%endif%}{%if i.Tag_Management%} ,{tag: "Management", scope: "{{i.Tag_Management}}"}{%endif%}{%if i.Tag_SharedService%}, {tag: "SHAREDSERVICE", scope: "{{i.Tag_SharedService}}"}{%endif%}{%if i.Tag_ApplicationName%}, {tag: "application", scope: "{{i.Tag_ApplicationName}}"}{%endif%}{%if i.Tag_ApplicationTier%}, {tag: "tier", scope: "{{i.Tag_ApplicationTier}}"}{%endif%}{%if i.Tag_Critical%}, {tag: "Critical", scope: }{%endif%}{%if i.Tag_Site%}, {tag: "site", scope: "{{i.Tag_Site}}"}{%endif%}] }
{% endfor %}

{% set temp_grps= [] %}
security_groups:
{% for g in vsecgroups if (g.group_name) and (g.group_name not in temp_grps) %}
{{temp_grps.append(g.group_name)}}
{% set temp_dynamic_grp = [] %}
  - group_name: "{{g.group_name}}"
    expression:
{% if g.member_type== 'static_ip_subnet'%}
      - resource_type: "IPAddressExpression"
        ip_addresses: "{{g.value.split(',')}}"
{% elif g.member_type== 'AD_group' %}
      - resource_type: "IdentityGroupExpression"
        identity_groups: ["{{g.value}}"]
{% elif g.member_type== 'static_segment' or g.member_type== 'static_existing_group' %}
      - resource_type: "PathExpression"
        paths: ["{{g.value}}"]
{% elif g.member_type== 'static_vm' %}
      - resource_type: "ExternalIDExpression"
        member_type: "VirtualMachine"
        external_ids: ["{{g.value}}"]
{% elif g.member_type== 'static_physical_server' %}
      - resource_type: "ExternalIDExpression"
        member_type: "PhysicalServer"
        external_ids: ["{{g.value}}"]
{% elif 'dynamic' in g.member_type and g.dynamic_operator and g.value %}
{%    for i in vsecgroups if i.group_name == g.group_name %}
{%        if  loop.length > 1 and loop.length < 6  %}
      - expressions:
          - resource_type: "Condition"
            member_type: {%if 'dynamic_vm' in i.member_type%}"VirtualMachine"{%elif i.member_type== 'dynamic_segment_tag'%}"Segment"{%elif i.member_type== 'dynamic_ipset_tag'%}"IPSet"{%endif%}
            key: {%if i.member_type== 'dynamic_vm_name'%}"Name"{%elif i.member_type== 'dynamic_vm_os_name'%}"OSName"{%elif i.member_type== 'dynamic_vm_computer_name'%}"ComputerName"{%else%}"Tag"{%endif%}
            operator: {%if 'dynamic_vm' in i.member_type%}"{{i.dynamic_operator}}"{%else%}"EQUALS"{%endif%}
            value: "{{i.value}}"
{%            if not loop.first and i.conjunction_operator %}
          - conjunction_operator: "{{i.conjunction_operator}}"
            resource_type: ConjunctionOperator
{%            endif%}
{%            if loop.last %}
        resource_type: NestedExpression
{%            endif%}
{%        elif loop.length == 1 %}
      - resource_type: "Condition"
        member_type: {%if 'dynamic_vm' in i.member_type%}"VirtualMachine"{%elif i.member_type== 'dynamic_segment_tag'%}"Segment"{%elif i.member_type== 'dynamic_ipset_tag'%}"IPSet"{%endif%}
        key: {%if i.member_type== 'dynamic_vm_name'%}"Name"{%elif i.member_type== 'dynamic_vm_os_name'%}"OSName"{%elif i.member_type== 'dynamic_vm_computer_name'%}"ComputerName"{%else%}"Tag"{%endif%}
        operator: {%if 'dynamic_vm' in i.member_type%}"{{i.dynamic_operator}}"{%else%}"EQUALS"{%endif%}
        value: "{{i.value}}"
{%        endif %}
{%    endfor %}
{% endif %}
{% endfor%}  

{# this must be refined with a way to resolve external ids (Vms, physical server and cloudvm instance) and also other criterias that depends on list as value (convert from text to list)#}