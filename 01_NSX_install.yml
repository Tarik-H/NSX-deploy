---
- name: NSX global parameters
  hosts: localhost
  connection: local
  gather_facts: no

  tasks:

  - name: Delete data directories
    file:
      path: ./{{item}}
      state: absent
    with_items:
      - 'data'
      - 'data'
      - 'fragments'

  - name: Create data directories
    file:
      path: ./data/fragments
      state: directory

  # - name: Copy & prepare the uploaded input Excel file
  #   copy:
  #     src: "{{nsx_filepath}}/"
  #     dest: "./data/{{nsx_filename}}"

  # - name: Initialize the excel file to use the input data
  #   xls_to_facts:
  #     src: "./data/{{nsx_filename}}"
  #   tags:
  #     - excel

  - name: Create system fabric model from spreadsheet data
    template:
      src: "./templates/{{item}}_system_fabric.j2"
      dest: "./data/fragments/{{item}}_system_fabric.yml"
    with_items:
      - "01"

  - name: Assemble fabric model
    assemble:
      src: "./data/fragments/"
      dest: "./data/system_fabric.yml"

  - name: load data
    include_vars:
      file: "./data/system_fabric.yml"

  # - name: Provision list of compute managers
  #   nsxt_fabric_compute_managers:
  #     hostname: "{{nsxt_ip}}"
  #     username: "{{nsx_username}}"
  #     password: "{{nsx_password}}"
  #     validate_certs: False
  #     display_name: "vCenter_{{item}}"
  #     server: "{{item}}"
  #     description: "vCenter_{{item}}"
  #     origin_type: vCenter
  #     credential:
  #       credential_type: "UsernamePasswordLoginCredential"
  #       username: "{{vcenter_user}}"
  #       password: "{{vcenter_pass}}"
  #     state: present
  #   register: cpu_mgr
  #   with_items: "{{system_fabric.vcenters_list}}"
  #   when: system_fabric.vcenters_list is defined

  # - name: View all compute managers
  #   debug:
  #     msg: "{{cpu_mgr}}"

  # - name: Create transport zone
  #   nsxt_transport_zones:
  #     hostname: "{{nsxt_ip}}"
  #     username: "{{nsx_username}}"
  #     password: "{{nsx_password}}"
  #     validate_certs: False
  #     resource_type: "TransportZone"
  #     display_name: "TZ_{{item}}"
  #     host_switch_mode: "STANDARD"
  #     description: "NSX configured {{item}} Transport Zone"
  #     transport_type: "{%if 'Overlay' in item%}OVERLAY{%elif 'Vlan' in item%}VLAN{%endif%}"
  #     is_default: "false"
  #     nested_nsx: "false"
  #     host_switch_name: "NSXT-NVDS"
  #     state: "present"
  #   with_items:
  #     - Overlay
  #     - Vlan
  #     - Edge-Vlan1
  #     - Edge-Vlan2
  #     - Edge-Vlan3
  #     - Edge-Vlan4

# This is a spot in case the Edges are nested inside compute transport node NVDS
  # - name: Create transport zone
  #   nsxt_transport_zones:
  #     hostname: "{{nsxt_ip}}"
  #     username: "{{nsx_username}}"
  #     password: "{{nsx_password}}"
  #     validate_certs: False
  #     resource_type: "TransportZone"
  #     display_name: "TZ_{{item}}"
  #     host_switch_mode: "STANDARD"
  #     description: "NSX configured {{item}} Transport Zone"
  #     transport_type: "{%if 'Overlay' in item%}OVERLAY{%elif 'Vlan' in item%}VLAN{%endif%}"
  #     is_default: "false"
  #     nested_nsx: "false"
  #     host_switch_name: "NSXT-NVDS"
  #     state: "present"
  #   with_items:
  #     - Overlay
  #     - Vlan
  #     - Edge-Vlan1
  #     - Edge-Vlan2
  #     - Edge-Vlan3
  #     - Edge-Vlan4


  - name: create IP Pool
    nsxt_policy_ip_pool:
      hostname: "{{nsxt_ip}}"
      username: "{{nsx_username}}"
      password: "{{nsx_password}}"
      validate_certs: False
      id: NSX_TEP_POOL
      display_name: NSX_TEP_POOL
      state: "present"
      create_or_update_subresource_first: 'true'    
      pool_static_subnets:
        - id: "TEP_subnet_{{item|ipaddr('network/prefix')}}"
          state: present
          allocation_ranges:
            - start: "{{item|ipaddr('network') | ipmath('2')}}"
              end: "{{item|ipaddr('network') | ipmath('-2')}}"
          cidr: "{{item|ipaddr('network/prefix')}}"
          gateway_ip: "{{item|ipaddr('address')}}"
    loop: "{{system_fabric.tep_pool_gws}}"
    when: system_fabric.tep_pool_gws is defined
    vars: 
      ansible_python_interpreter: /usr/bin/python3


  # - name: View all compute managers
  #   debug:
  #     msg: "{{item|ipaddr('network/prefix')}}"
  #   loop: "{{system_fabric.tep_pool_gws}}"
  #   when: system_fabric.tep_pool_gws is defined

  # - name: create IP Pool
  #   nsxt_policy_ip_pool:
  #     hostname: "{{nsxt_ip}}"
  #     username: "{{nsx_username}}"
  #     password: "{{nsx_password}}"
  #     validate_certs: False
  #     id: NSX_TEP_POOL
  #     display_name: NSX_TEP_POOL
  #     state: "present"
  #     create_or_update_subresource_first: true
  #     pool_static_subnets:
  #       - id: "TEP_subnet_192.168.50.0"
  #         state: present
  #         allocation_ranges:
  #           - start: "192.168.50.2"
  #             end: "192.168.50.254"
  #         cidr: "192.168.50.0/24"
  #         gateway_ip: "192.168.50.1"
  #   vars: 
  #     ansible_python_interpreter: /usr/bin/python3



  # - name: Create Uplink Profiles
  #   nsxt_uplink_profiles:
  #     hostname: "{{nsxt_ip}}"
  #     username: "{{nsx_username}}"
  #     password: "{{nsx_password}}"
  #     validate_certs: False
  #     display_name: "uplinkProfile1",
  #     mtu: 1600
  #     resource_type: "UplinkHostSwitchProfile"
  #     teaming:
  #       policy: FAILOVER_ORDER     
  #       active_list:
  #         - uplink_name: "uplink-1"
  #           uplink_type: PNIC
  #       standby_list:
  #         - uplink_name: "uplink-1"
  #           uplink_type: PNIC      
  #     transport_vlan: 0,
  #     state: "present"